pipeline {
    agent any

    environment {
        DOCKER_IMAGE = 'abhik1203'  // Replace with your actual Docker Hub repo
    }

    stages {
        stage('Checkout') {
            steps {
                // Automatically checks out code from the configured repository
                checkout scm
            }
        }

        stage('Build') {
            steps {
                // Compile and package the Java application using Maven
                sh 'mvn clean package'
            }
        }

        stage('Test') {
            steps {
                // Run unit tests
                sh 'mvn test'
            }
        }

        stage('Docker Build') {
            steps {
                script {
                    // Build a Docker image from the Dockerfile
                    sh 'docker build -t $DOCKER_IMAGE .'
                }
            }
        }

        stage('Docker Push') {
            steps {
                script {
                    // Log in to Docker Hub and push the image using Jenkins credentials
                    withCredentials([usernamePassword(
                        credentialsId: 'dockerhub-token',
                        usernameVariable: 'DOCKER_USER',
                        passwordVariable: 'DOCKER_PASS'
                    )]) {
                        sh '''
                            echo "$DOCKER_PASS" | docker login -u "$DOCKER_USER" --password-stdin
                            docker push $DOCKER_IMAGE
                        '''
                    }
                }
            }
        }
    }

    post {
        always {
            // Archive the built JAR file for download
            archiveArtifacts artifacts: 'target/*.jar', fingerprint: true
        }
        success {
            echo 'Build and deployment successful!'
        }
        failure {
            echo 'Pipeline failed.'
        }
    }
}
